#include "mbed.h"
#include "QEI.h"

//leftmost(LM) receiver(R) PC_0
//leftmost(LM) emitter(E) PB_7
AnalogIn   LMR(PC_0);
DigitalOut LME(PB_7);

//upperleft(UL) receiver(R) PC_1
//upperleft(UL) emitter(E) PB_0
AnalogIn   ULR(PC_1);
DigitalOut ULE(PB_0);

//upperright(UR) receiver(R) PA_4
//upperright(UR) emitter(E) PC_11
AnalogIn   URR(PA_4);
DigitalOut URE(PC_11);

//rightmost(RM) receiver(R) PA_0
//rightmost(RM) emitter(E)  PC_10
AnalogIn   RMR(PA_0);
DigitalOut RME(PC_10);

PwmOut M1F(PC_7);
PwmOut M1B(PB_10);
PwmOut M2F(PB_6);
PwmOut M2B(PA_7);

QEI M1Encoder (PB_3, PA_15, NC, 12);
QEI M2Encoder (PA_1, PC_4, NC, 12);

int pulsePerInch = 140;

Serial pc(PA_11, PA_12);

int main()
{
    M1F = 0;
    M1B = 0;
    M2F = 0;
    M2B = 0;
    LME = 1;

    /* The following code checks when there is an opening to the left. if theres an opening, it will turn left into the opening. 
        int finish = 0;

        while(1) {
            M1F = 0.15;
            M2F = 0.15;
            M1Encoder.reset();
            M2Encoder.reset();

            pc.printf ("\nIR Sensor Values:%f\n", LMR.read());
            wait(0.5);

            if(LMR.read() < 0.5) {
                M1Encoder.reset();
                M2Encoder.reset();

                //going straight 6 inches until turn
                while (M1Encoder.getPulses() < pulsePerInch*6 && M2Encoder.getPulses() < pulsePerInch*6) {
                    M1F = 0.15;
                    M1B = 0;

                    M2F = 0.15;
                    M2B = 0;
                }
                M1Encoder.reset();
                M2Encoder.reset();

                //turning left
                while (M1Encoder.getPulses() < pulsePerInch*2.45 && M2Encoder.getPulses() < pulsePerInch*2.45) {
                    M1F = 0.3;
                    M1B = 0;

                    M2F = 0;
                    M2B = 0.3;
                }
                M1Encoder.reset();
                M2Encoder.reset();

                //going straight 3 inches
                while (M1Encoder.getPulses() < pulsePerInch*3 && M2Encoder.getPulses() < pulsePerInch*3) {
                    M1F = 0.15;
                    M1B = 0;

                    M2F = 0.15;
                    M2B = 0;
                }
                M1Encoder.reset();
                M2Encoder.reset();

                finish = 1;
            }

            if(finish == 1) break;
        }

        M1F = 0;
        M1B = 0;
        M2F = 0;
        M2B = 0;
    */





    /*The following code will make the rat stop if its about to hit a wall
    M1F = 0.15;
    M2F = 0.15;
    while(1) {
        LME = 1;
        ULE = 1;
        URE = 1;
        RME = 1;
        if (LMR.read() > 0.75 || ULR.read() > 0.85 || URR.read() > 0.85 || RMR.read() > 0.45) {
            M1F = 0;
            M2F = 0;
        }
     */

}
